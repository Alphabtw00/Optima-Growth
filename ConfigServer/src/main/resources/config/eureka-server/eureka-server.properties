#________________________________________________#SERVICE CONFIG-->>___________________________________________________#

server.port=8071
#_____________________________________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x__________________________________________#






#________________________________________________#EUREKA SERVER CONFIG-->>_____________________________________________#
#to set hostname (used by services to register and given to them as metadata)
eureka.instance.hostname= eurekaServer

#doesnt register itself as a service in any eureka server(including itself)
eureka.client.register-with-eureka=false

#doesnt fetch and maintain its own registry and wont cache it locally
eureka.client.fetch-registry=false



#how long server should wait before attempting to sync with all servers when registry is empty
#used when many servers present
#eureka.server.wait-time-in-ms-when-sync-empty=5


#url(s) of all eureka servers(not important in standalone server case)
#used to make eureka server a client to other servers
#eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

#_____________________________________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x__________________________________________#









#_________________________________________________#ACTUATOR CONFIG-->>__________________________________________________

#all actuator endpoints exposed
management.endpoints.web.exposure.include=*

#actuator endpoints exposed when running app
management.endpoints.enabled-by-default= true
#_____________________________________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x__________________________________________#









#_________________________________________________#ADMIN-SERVER CONFIG-->>_____________________________________________#

#confugire client to admin server running on port 8073(doesnt work on springboot 3.2.0)
spring.boot.admin.client.url=http://adminServer:8073

#as admin server is secured we need to send info from client to authenticate
spring.boot.admin.client.username={cipher}1e95da2a3a3b7a6b33197a98f55330bb17dd1fb33422c06161b51d173fd0d4b7
spring.boot.admin.client.password={cipher}2ef0a5915e6f55d4989a941c2f091725253f22197f8bf11cd5c07d37173751d9

#client url(as client wont know its own admin client port if running in docker)
spring.boot.admin.client.instance.service-base-url=http://eurekaServer:8071
#_____________________________________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x__________________________________________#